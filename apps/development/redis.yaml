apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-persistent-volume
  namespace: development
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-persistent-volume-claim
  namespace: development
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: development
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        name: redis
    spec:
      nodeSelector:
        node-type: worker
      containers:
      - name: redis
        image: redis:latest 
        args: ["--appendonly", "yes"]
        ports:
          - name: redis
            containerPort: 6379
        volumeMounts:
          - name: redis-persistent-storage
            mountPath: /data
        env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
      volumes:
        - name: redis-persistent-storage
          persistentVolumeClaim:
            claimName: redis-persistent-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: development
spec:
  selector:
    app: redis
  ports:
    - name: http
      protocol: TCP
      port: 6379
      targetPort: 6379